#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argparse

from bash_history.configs import BashHistoryColorArgs, BashHistoryConfig, BashHistoryPagerArgs, BashHistorySelectArgs, get_or_load_config
from bash_history.db_commands import select_commands
from bash_history.utils import try_import_argcomplete


class ScriptArgs(BashHistoryColorArgs, BashHistoryPagerArgs, BashHistorySelectArgs):

  def __init__(self, args: argparse.Namespace):
    BashHistoryColorArgs.__init__(self, args)
    BashHistoryPagerArgs.__init__(self, args)

    BashHistorySelectArgs.__init__(self, args)


def main():
  config = get_or_load_config()
  args = _parse_args(config)
  select_commands(args)


def _parse_args(config: BashHistoryConfig) -> ScriptArgs:
  arg_parser = argparse.ArgumentParser()

  BashHistoryColorArgs.add_arguments_to_parser(arg_parser)
  BashHistoryPagerArgs.add_arguments_to_parser(arg_parser, config)

  BashHistorySelectArgs.add_arguments_to_parser(arg_parser, config)

  try_import_argcomplete(arg_parser)
  return ScriptArgs(arg_parser.parse_args())


if __name__ == "__main__":
  try:
    main()
  except KeyboardInterrupt:
    exit(130)
