#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argparse
import logging

from bash_history.configs import BashHistoryColorArgs, BashHistoryConfig, BashHistoryPagerArgs, BashHistorySelectArgs, get_or_load_config
from bash_history.db_commands import select_commands
from bash_history.output import ask_user_to_select_command, create_results_output
from bash_history.utils import try_import_argcomplete
from ltpylib import logs, opts, procs


class ScriptArgs(BashHistoryColorArgs, BashHistoryPagerArgs, BashHistorySelectArgs):

  def __init__(self, args: argparse.Namespace):
    BashHistoryColorArgs.__init__(self, args)
    BashHistoryPagerArgs.__init__(self, args)

    BashHistorySelectArgs.__init__(self, args)

    self.verbose: bool = args.verbose


def main():
  config = get_or_load_config()
  args = _parse_args(config)
  results, column_max_lengths = select_commands(args, use_command_line=True)

  if not results:
    exit(1)

  output_lines = create_results_output(config, args, results, column_max_lengths)
  selected_commands = ask_user_to_select_command(results, output_lines)
  for command in selected_commands:
    logging.warning("Running: %s\n%s", command, logs.LOG_SEP)
    procs.run_with_regular_stdout(
      ["bash", "-c", command],
      check=False,
    )


def _parse_args(config: BashHistoryConfig) -> ScriptArgs:
  arg_parser = argparse.ArgumentParser()

  arg_parser.add_argument("-v", "--verbose", action="store_true")

  BashHistoryColorArgs.add_arguments_to_parser(arg_parser)
  BashHistoryPagerArgs.add_arguments_to_parser(arg_parser, config)

  BashHistorySelectArgs.add_arguments_to_parser(arg_parser, config)

  try_import_argcomplete(arg_parser)
  return ScriptArgs(opts.parse_args_and_init_others(arg_parser))


if __name__ == '__main__':
  try:
    main()
  except KeyboardInterrupt:
    exit(130)
